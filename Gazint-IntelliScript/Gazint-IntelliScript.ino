//Made by Nicholas Odeh, for IT automation
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Keyboard.h>
#include <Mouse.h>
#define OLED_RESET 4
#define pinA 8
#define pinB 7
#define pinC 6
#define pinD 10
Adafruit_SSD1306 display(OLED_RESET);
//pro mciro oled pins: 2(SDA) & 3(SCL)

//change this to change images for your use case.
const unsigned char myBitmap[] PROGMEM = {
  0x77, 0x77, 0x77, 0x77, 0x57, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x75, 0x77, 0x77, 0x77, 0x77,
  0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xe3, 0xf3, 0xff, 0xff, 0xff, 0xf1, 0xf3, 0xff, 0xff, 0xff,
  0xfd, 0x5f, 0xff, 0x45, 0x07, 0xff, 0xd4, 0xc7, 0xff, 0xf5, 0xff, 0xd4, 0x43, 0xff, 0xfd, 0x7d,
  0xfc, 0x3f, 0xff, 0x80, 0x07, 0xff, 0x98, 0x03, 0xff, 0xf9, 0xff, 0xce, 0x03, 0xff, 0xfc, 0x7f,
  0x70, 0x17, 0x77, 0x15, 0x57, 0x77, 0x5d, 0x77, 0x77, 0x64, 0x77, 0x55, 0x73, 0x77, 0x73, 0x17,
  0xf8, 0x0f, 0xff, 0x02, 0x23, 0xff, 0xbb, 0xf3, 0xff, 0xe2, 0x7f, 0xbf, 0xf3, 0xff, 0xf3, 0xbf,
  0xf0, 0x1f, 0xfe, 0x55, 0x51, 0xff, 0x7f, 0xfd, 0xff, 0xc4, 0x7f, 0x7f, 0xd5, 0xff, 0xf7, 0x9d,
  0xf8, 0x3f, 0xfe, 0x2a, 0x39, 0xfe, 0x3f, 0x98, 0xff, 0xe0, 0x7f, 0x3f, 0x0c, 0xff, 0xf3, 0x9f,
  0x70, 0x37, 0x76, 0x55, 0x31, 0x77, 0x7f, 0x15, 0x77, 0x60, 0x77, 0x3f, 0x15, 0x77, 0x71, 0x17,
  0xf8, 0x3f, 0xfe, 0x2a, 0xf6, 0xfe, 0x3f, 0xf3, 0xff, 0xe0, 0x7f, 0x3f, 0xf2, 0x7f, 0xf3, 0xbf,
  0xf4, 0x5f, 0xfe, 0x7f, 0xfc, 0x7f, 0x7f, 0xff, 0xff, 0xc4, 0x7f, 0x7f, 0xff, 0x7f, 0xf7, 0x9d,
  0xf8, 0x3e, 0x00, 0xff, 0xf0, 0xfe, 0x3f, 0xe0, 0x1f, 0xe0, 0xff, 0x3f, 0xfc, 0x0f, 0xf3, 0x9f,
  0x70, 0x75, 0x11, 0x5f, 0xf1, 0x77, 0x7f, 0xf1, 0x17, 0x64, 0x77, 0x3f, 0xf5, 0x17, 0x73, 0x17,
  0xf8, 0x38, 0x23, 0xff, 0xe7, 0xfe, 0x3f, 0xe0, 0x23, 0xe0, 0x7f, 0x3f, 0xfa, 0x23, 0xf2, 0xbf,
  0xf4, 0x55, 0x55, 0xff, 0xf7, 0xff, 0x7f, 0xd5, 0x55, 0xc4, 0x7f, 0x7f, 0xfd, 0x55, 0xf5, 0x9d,
  0xf8, 0x02, 0xef, 0xff, 0xe7, 0xfe, 0x3f, 0xef, 0x80, 0xe0, 0xff, 0x3f, 0xff, 0xf8, 0xf3, 0x9f,
  0x74, 0x07, 0x77, 0xff, 0xf7, 0x77, 0x7f, 0xf7, 0x54, 0x60, 0x77, 0x3f, 0xff, 0xf5, 0x71, 0x17,
  0xff, 0x23, 0x7f, 0xff, 0xcf, 0xfe, 0x3f, 0xfb, 0x82, 0x02, 0x7f, 0x3f, 0xff, 0xeb, 0x0f, 0xbf,
  0xff, 0x17, 0x7f, 0xfd, 0x5f, 0xff, 0x7f, 0xfd, 0x54, 0x14, 0x7f, 0x5f, 0xff, 0xd7, 0x1d, 0x1d,
  0xff, 0x3f, 0xff, 0xfe, 0x3f, 0xfe, 0x3f, 0xfe, 0xe8, 0xa0, 0x7f, 0x8f, 0xff, 0xff, 0xbe, 0x1f,
  0x75, 0x77, 0x57, 0xf5, 0x77, 0x77, 0x75, 0xff, 0x55, 0x41, 0x77, 0x5d, 0x7f, 0xfd, 0x54, 0x77,
  0xfc, 0x3f, 0xbf, 0xe8, 0xff, 0xfe, 0x3b, 0xff, 0xba, 0x23, 0xff, 0x8b, 0xff, 0xff, 0xa8, 0x7f,
  0xfc, 0x5f, 0x07, 0xc0, 0x7f, 0xff, 0x75, 0x7d, 0xf5, 0x07, 0xff, 0xdd, 0x5f, 0x7f, 0x41, 0xfd,
  0xfc, 0xf8, 0x07, 0xe0, 0xff, 0xfe, 0x38, 0xf8, 0xfa, 0x1f, 0xff, 0x8e, 0x3e, 0x7f, 0xcf, 0xff,
  0x74, 0x74, 0x15, 0xe1, 0x77, 0x77, 0x71, 0xf1, 0x55, 0x17, 0x77, 0x5d, 0x5d, 0x57, 0xc7, 0x77,
  0xfc, 0xf0, 0x19, 0xe2, 0xff, 0xfe, 0x39, 0xe0, 0x1e, 0x1f, 0xff, 0x8a, 0x78, 0x0f, 0xaf, 0xff,
  0xfc, 0x7c, 0x55, 0xc5, 0x7f, 0xff, 0x75, 0xc0, 0x1f, 0x1f, 0xff, 0xdd, 0x7c, 0x07, 0xcf, 0xfd,
  0xfc, 0xac, 0x08, 0xa0, 0xbf, 0xfe, 0x20, 0x80, 0x0a, 0x3f, 0xff, 0x88, 0x28, 0x02, 0x8f, 0xff,
  0x74, 0x17, 0x06, 0x00, 0x37, 0x77, 0x00, 0x00, 0x10, 0x77, 0x77, 0x40, 0x04, 0x00, 0x07, 0x77,
  0xea, 0xaa, 0xaa, 0xaa, 0xab, 0xea, 0xaa, 0xaa, 0xaa, 0xaa, 0xfa, 0xaa, 0xaa, 0xaa, 0xaa, 0xbf,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char myBitmap2[] PROGMEM = {
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xa0, 0xa0, 0xaa, 0xaa, 0xaa, 0xaa, 0x0a, 0x0a,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x50, 0x54, 0x55, 0x55, 0x55, 0x55, 0x55, 0x15,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xa6, 0x0c, 0xaa, 0xaa, 0xaa, 0xa8, 0xe0, 0x8a,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x47, 0x55, 0x55, 0x55, 0x55, 0x55, 0x75, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xa7, 0xbe, 0xaa, 0xaa, 0xaa, 0xa8, 0xfb, 0xca,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x51, 0xd5, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x8e, 0xfe, 0x2a, 0xaa, 0xaa, 0xa8, 0xff, 0xe2,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x51, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0x2a, 0xa2, 0xaa, 0xaa, 0xaa, 0x8b, 0x8a, 0x2a, 0xaa, 0xaa, 0xa3, 0xb9, 0x82,
  0x55, 0x55, 0x55, 0x05, 0x41, 0x55, 0x55, 0x55, 0x55, 0x54, 0x55, 0x55, 0x55, 0x51, 0x51, 0x45,
  0xaa, 0xaa, 0xaa, 0xb8, 0x1a, 0xaa, 0xaa, 0xaa, 0x8e, 0x8e, 0x2a, 0xaa, 0xaa, 0xaa, 0xf9, 0xe2,
  0x55, 0x55, 0x55, 0x35, 0x51, 0x55, 0x55, 0x55, 0x55, 0x5d, 0x55, 0x55, 0x55, 0x51, 0x55, 0x35,
  0xaa, 0xaa, 0x80, 0x3f, 0xba, 0xaa, 0xaa, 0xaa, 0x83, 0xbb, 0x2a, 0xaa, 0xaa, 0x02, 0xbb, 0xa2,
  0x55, 0x55, 0x54, 0x75, 0x51, 0x55, 0x55, 0x55, 0x55, 0xfc, 0x55, 0x55, 0x55, 0x51, 0x5f, 0xd5,
  0xaa, 0xaa, 0x3e, 0x3e, 0xea, 0xaa, 0xaa, 0xa8, 0x07, 0xf8, 0xaa, 0xaa, 0xaa, 0xe8, 0x7f, 0x8a,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x51, 0x55, 0xf5, 0x55, 0x15, 0x55, 0x55, 0x5f, 0x15,
  0xaa, 0xa8, 0xba, 0x3b, 0x38, 0xaa, 0xaa, 0xa3, 0xbb, 0xf2, 0xaa, 0x2a, 0xa3, 0xba, 0xbe, 0x2a,
  0x55, 0x55, 0x55, 0x55, 0x51, 0x55, 0x55, 0x45, 0x55, 0xf5, 0x54, 0x55, 0x55, 0x55, 0x5f, 0x55,
  0xaa, 0xaa, 0xfe, 0x3f, 0xf8, 0xaa, 0xaa, 0x8f, 0xeb, 0xf2, 0xaa, 0x22, 0xa3, 0xfe, 0xbe, 0x2a,
  0x55, 0x51, 0x55, 0x55, 0x75, 0x55, 0x55, 0x55, 0x55, 0xf5, 0x55, 0x15, 0x45, 0x55, 0x7f, 0x55,
  0xaa, 0xa3, 0xba, 0x3f, 0xfa, 0xaa, 0xaa, 0x0b, 0xbb, 0xe2, 0xaa, 0x1a, 0x8b, 0xab, 0xbe, 0x2a,
  0x55, 0x55, 0x55, 0x5f, 0xf5, 0x55, 0x55, 0x15, 0x55, 0xd5, 0x55, 0x55, 0x55, 0x75, 0x7d, 0x55,
  0xaa, 0xa2, 0xef, 0x8f, 0xe2, 0xaa, 0xaa, 0x0f, 0xbf, 0xa2, 0xaa, 0x88, 0x8f, 0xfa, 0xf8, 0xaa,
  0x55, 0x55, 0x75, 0x57, 0xd5, 0x55, 0x55, 0x15, 0x17, 0xd5, 0x55, 0x55, 0x55, 0x71, 0x75, 0x55,
  0x80, 0x03, 0xe9, 0xaf, 0xea, 0xaa, 0x00, 0x0b, 0x9b, 0x22, 0xaa, 0x8a, 0x03, 0xe1, 0x80, 0xaa,
  0x55, 0x45, 0xc5, 0x51, 0x15, 0x55, 0x55, 0x17, 0x15, 0x55, 0x55, 0x55, 0x55, 0x71, 0x55, 0x55,
  0x8a, 0x82, 0xe0, 0xfc, 0xca, 0xaa, 0x2a, 0x0e, 0xc6, 0x62, 0xaa, 0xa2, 0x81, 0xcc, 0xee, 0xaa,
  0x51, 0x01, 0x51, 0x55, 0x55, 0x55, 0x11, 0x15, 0x45, 0x55, 0x55, 0x51, 0x01, 0x54, 0x55, 0x55,
  0x00, 0x00, 0x00, 0x00, 0x02, 0xa8, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x80, 0x00, 0x00, 0x00, 0x2a,
  0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa
};

const unsigned char myBitmap3[] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xfb, 0xf7, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xe7, 0xf9, 0xe7, 0xfc, 0x3e, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x47, 0xf0, 0xc3, 0xfc, 0x38, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xf0, 0x03, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xf0, 0x03, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe2, 0x23, 0xf2, 0x13, 0xf9, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x13, 0xe2, 0x13, 0xf4, 0x29, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe5, 0xd3, 0xf0, 0xc3, 0xf3, 0xe5, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x63, 0xe5, 0xb9, 0xf1, 0xb1, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x67, 0xf3, 0xf7, 0xff, 0xdb, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xef, 0xfd, 0xe7, 0xf9, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xef, 0x3b, 0xe7, 0xfb, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf6, 0x1b, 0xc7, 0xfb, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xf6, 0x1b, 0xc3, 0xfb, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf6, 0x3f, 0x81, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x76, 0x3b, 0x80, 0xf3, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xe6, 0x3b, 0x80, 0x7b, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x30, 0x6c, 0x39, 0x80, 0x7d, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x08, 0x44, 0x7d, 0x00, 0x3c, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x04, 0x00, 0xf8, 0x00, 0x3c, 0x28, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x05, 0xb1, 0xfc, 0x40, 0x3c, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xb7, 0xf3, 0xc0, 0x3e, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xa8, 0xe1, 0x40, 0x3e, 0x60, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x40, 0xe2, 0xf0, 0x7e, 0x68, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xe7, 0x7c, 0x7c, 0xee, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xc5, 0x24, 0x10, 0x88, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char myBitmap4[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xff, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0x7f, 0xfc, 0x00, 0xff, 0xf0, 0x03, 0x80, 0x3f, 0xff, 0x1e, 0x3c, 0x07, 0x8f, 0xff, 0xf8, 
	0x0f, 0x7f, 0xfc, 0x03, 0xff, 0xf0, 0x07, 0xc0, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x8f, 0xff, 0xf8, 
	0x03, 0x00, 0x0c, 0x03, 0xff, 0xf0, 0x07, 0xc0, 0x3f, 0xff, 0x1e, 0x3f, 0x07, 0x8f, 0xff, 0xf8, 
	0x1b, 0x7f, 0xed, 0x03, 0xff, 0xf8, 0x0f, 0xe0, 0x3f, 0xff, 0x1e, 0x3f, 0x87, 0x8f, 0xff, 0xf8, 
	0x0b, 0x40, 0x2c, 0x07, 0xc0, 0x00, 0x0f, 0xe0, 0x00, 0x3e, 0x1e, 0x3f, 0xc7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc0, 0x00, 0x1f, 0xf0, 0x00, 0x7e, 0x1e, 0x3f, 0xe7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc0, 0x00, 0x1f, 0xf0, 0x00, 0xfc, 0x1e, 0x3f, 0xf7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc7, 0xf0, 0x3e, 0xf8, 0x01, 0xf8, 0x1e, 0x3f, 0xf7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x0d, 0x87, 0xc7, 0xf0, 0x3c, 0xf8, 0x03, 0xf0, 0x1e, 0x3e, 0xff, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc7, 0xf0, 0x7c, 0x78, 0x07, 0xe0, 0x1e, 0x3e, 0xff, 0x80, 0x1e, 0x00, 
	0x03, 0x40, 0x2d, 0x87, 0xc0, 0xf0, 0x7c, 0x7c, 0x0f, 0xc0, 0x1e, 0x3e, 0x7f, 0x80, 0x1e, 0x00, 
	0x1b, 0x40, 0x00, 0x07, 0xc0, 0xf0, 0x78, 0x3c, 0x0f, 0x80, 0x1e, 0x3e, 0x3f, 0x80, 0x1e, 0x00, 
	0x0b, 0x7f, 0xef, 0x07, 0xff, 0xf0, 0xf8, 0x3e, 0x1f, 0xff, 0x1e, 0x3e, 0x1f, 0x80, 0x1e, 0x00, 
	0x03, 0x00, 0x0c, 0x03, 0xff, 0xf0, 0xf0, 0x1e, 0x3f, 0xff, 0x1e, 0x3e, 0x0f, 0x80, 0x1e, 0x00, 
	0x03, 0xfe, 0x5c, 0x03, 0xff, 0xf1, 0xf0, 0x1f, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x80, 0x1e, 0x00, 
	0x03, 0xfe, 0xdc, 0x01, 0xff, 0xf1, 0xe0, 0x1f, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x80, 0x1e, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xf1, 0xe0, 0x0f, 0x3f, 0xff, 0x0e, 0x1c, 0x03, 0x80, 0x1e, 0x00, 
	0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char myBitmap5[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xff, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0x7f, 0xfc, 0x00, 0xff, 0xf0, 0x03, 0x80, 0x3f, 0xff, 0x1e, 0x3c, 0x07, 0x8f, 0xff, 0xf8, 
	0x0f, 0x7f, 0xfc, 0x03, 0xff, 0xf0, 0x07, 0xc0, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x8f, 0xff, 0xf8, 
	0x03, 0x00, 0x0c, 0x03, 0xff, 0xf0, 0x07, 0xc0, 0x3f, 0xff, 0x1e, 0x3f, 0x07, 0x8f, 0xff, 0xf8, 
	0x1b, 0x7f, 0xed, 0x03, 0xff, 0xf8, 0x0f, 0xe0, 0x3f, 0xff, 0x1e, 0x3f, 0x87, 0x8f, 0xff, 0xf8, 
	0x0b, 0x40, 0x2c, 0x07, 0xc0, 0x00, 0x0f, 0xe0, 0x00, 0x3e, 0x1e, 0x3f, 0xc7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc0, 0x00, 0x1f, 0xf0, 0x00, 0x7e, 0x1e, 0x3f, 0xe7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc0, 0x00, 0x1f, 0xf0, 0x00, 0xfc, 0x1e, 0x3f, 0xf7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc7, 0xf0, 0x3e, 0xf8, 0x01, 0xf8, 0x1e, 0x3f, 0xf7, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x0d, 0x87, 0xc7, 0xf0, 0x3c, 0xf8, 0x03, 0xf0, 0x1e, 0x3e, 0xff, 0x80, 0x1e, 0x00, 
	0x0b, 0x40, 0x2d, 0x87, 0xc7, 0xf0, 0x7c, 0x78, 0x07, 0xe0, 0x1e, 0x3e, 0xff, 0x80, 0x1e, 0x00, 
	0x03, 0x40, 0x2d, 0x87, 0xc0, 0xf0, 0x7c, 0x7c, 0x0f, 0xc0, 0x1e, 0x3e, 0x7f, 0x80, 0x1e, 0x00, 
	0x1b, 0x40, 0x00, 0x07, 0xc0, 0xf0, 0x78, 0x3c, 0x0f, 0x80, 0x1e, 0x3e, 0x3f, 0x80, 0x1e, 0x00, 
	0x0b, 0x7f, 0xef, 0x07, 0xff, 0xf0, 0xf8, 0x3e, 0x1f, 0xff, 0x1e, 0x3e, 0x1f, 0x80, 0x1e, 0x00, 
	0x03, 0x00, 0x0c, 0x03, 0xff, 0xf0, 0xf0, 0x1e, 0x3f, 0xff, 0x1e, 0x3e, 0x0f, 0x80, 0x1e, 0x00, 
	0x03, 0xfe, 0x5c, 0x03, 0xff, 0xf1, 0xf0, 0x1f, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x80, 0x1e, 0x00, 
	0x03, 0xfe, 0xdc, 0x01, 0xff, 0xf1, 0xe0, 0x1f, 0x3f, 0xff, 0x1e, 0x3e, 0x07, 0x80, 0x1e, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xf1, 0xe0, 0x0f, 0x3f, 0xff, 0x0e, 0x1c, 0x03, 0x80, 0x1e, 0x00, 
	0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {

  pinMode(pinA, INPUT_PULLUP);                //setting up internal pullup resitor
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // 0x3c is the I2C address
  display.clearDisplay();
  Keyboard.begin();  // Initialize the keyboard
  Mouse.begin();     // Initialize Mouse library
}

void loop() {
  display.display();
  display.drawBitmap(0, 0, myBitmap2, 128, 32, WHITE); //Admin Pass Hotkey.
  display.display();
  delay(200);

//Admin Pass Hotkey. 
  if (digitalRead(pinA) == LOW) { //pinA = pin 8
    Serial.println("Button A pressed"); // to make sure key is funtional
    display.clearDisplay();
    display.drawBitmap(0, 0, myBitmap4, 128, 32, WHITE);
    display.display();
    delay(100);
    Mouse.click(MOUSE_LEFT);  // Perform a right-click
    display.display();
    delay(100);
    Keyboard.print("Your BIOS Key");  // Corrected with a semicolon
    delay(100);
    Keyboard.write(KEY_RETURN);
    delay(100);
    while (digitalRead(pinA) == LOW);  // Wait for button release to avoid repeated messages
    delay(50);
    display.clearDisplay();
  }


//BIOS DRIVER LOCATION 7400 Hotkey
    if (digitalRead(pinB) == LOW) { //pinB = pin 7
    Serial.println("Button B pressed");
    display.clearDisplay();
    display.drawBitmap(0, 0, myBitmap3, 128, 32, WHITE);
    display.display();
    delay(100);
   // Mouse.click(MOUSE_LEFT);  // Perform a right-click
    Keyboard.press(KEY_LEFT_GUI); // Press the Windows key
    Keyboard.press('r');          // Press the 'R' key Write what you want here! 
    delay(100);                   
    Keyboard.releaseAll();        // Release all keys
    display.display();
    delay(100);
    Keyboard.print("D:/Dell BIOS/Latitude 7400");  // Bios driver location
    delay(100);
    Keyboard.write(KEY_RETURN);
    delay(100);
    while (digitalRead(pinB) == LOW);  // Wait for button release to avoid repeated messages
    delay(50);
    display.clearDisplay();


  }



  //BIOS Windows Install Hotkey
    if (digitalRead(pinC) == LOW) { //pinC = pin 6
     Serial.println("Button C pressed");
    display.clearDisplay();
    display.drawBitmap(0, 0, myBitmap, 128, 32, WHITE);
    display.display();
    delay(100);
    Keyboard.write(KEY_DOWN_ARROW);
    Keyboard.write(KEY_RETURN);
    Keyboard.print("Your BIOS Key");
    Keyboard.write(KEY_RETURN);

//more code for mouse movement automation can go here
//more code for mouse movement automation can go here
    delay(100);
    while (digitalRead(pinC) == LOW);  // Wait for button release to avoid repeated messages
    delay(50);
    display.clearDisplay();


  }

 
  


}
